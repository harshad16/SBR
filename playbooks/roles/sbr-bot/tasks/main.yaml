---
  - name: "make sure to use project {{ SBR_APPLICATION_NAMESPACE }}"
    command: "oc project {{ SBR_APPLICATION_NAMESPACE }}"
    register: project_exists
    ignore_errors: true
    changed_when: False

  - name: "check if ImageStream exists"
    command: "oc get imagestream --namespace {{ SBR_APPLICATION_NAMESPACE }} sbr-job"
    register: imagestream_exists
    ignore_errors: true
    changed_when: False

  - name: create sbr ImageStream
    command: oc new-app --namespace "{{ SBR_APPLICATION_NAMESPACE }}" --template="{{ SBR_INFRA_NAMESPACE }}/sbr-imagestream"
    when: imagestream_exists is failed
    
  - name: "check if BuildConfig exists"
    command: "oc get buildconfig --namespace {{ SBR_APPLICATION_NAMESPACE }} sbr-job"
    register: buildconfig_exists
    ignore_errors: true
    changed_when: False

  - name: create sbr BuildConfig
    command: oc new-app --namespace "{{ SBR_APPLICATION_NAMESPACE }}" --template="{{ SBR_INFRA_NAMESPACE }}/sbr-buildconfig"
    when: buildconfig_exists is failed

  - name: start sbr-job Build
    command: oc start-build --namespace "{{ SBR_APPLICATION_NAMESPACE }}" sbr-job
    when: buildconfig_exists is failed

  - name: "check if required Secret 'sbr-secret' exists"
    command: "oc get secret --namespace {{ SBR_APPLICATION_NAMESPACE }} sbr-secret"
    register: secret_exists
    ignore_errors: true

  - name: create Secret with RHN Username and Password
    command: oc create secret --namespace "{{ SBR_APPLICATION_NAMESPACE }}" generic sbr-secret \
      --from-file=password="{{ RHN_PASSWORD }}" \
      --from-literal=username="{{ RHN_USERNAME }}"
      --type=kubernetes.io/basic-auth \
    when: secret_exists is failed

  - name: "check if required ConfigMap 'sbr-configmap' exists"
    command: "oc get configmap --namespace {{ SBR_APPLICATION_NAMESPACE }} sbr-configmap"
    register: configmap_exists
    ignore_errors: true
    changed_when: False

  - name: create sbr Configmap
    command: oc create configmap --namespace "{{ SBR_APPLICATION_NAMESPACE  }}" sbr-configmap \
      --from-literal=ticket="{{ SBR_TICKET }}"
    when: configmap_exists is failed
  
  - name: "check if Job exists"
    command: "oc get job --namespace {{ SBR_APPLICATION_NAMESPACE }} sbr"
    register: job_exists
    ignore_errors: true
    changed_when: False
  
  - name: create sbr Job
    command: oc new-app --namespace "{{ SBR_APPLICATION_NAMESPACE  }}" --template="{{ SBR_INFRA_NAMESPACE  }}/sbr-newjob"
    when: job_exists is failed
