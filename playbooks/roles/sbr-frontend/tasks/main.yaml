---
  - name: "make sure to use project {{ SBR_APPLICATION_NAMESPACE }}"
    command: "oc project {{ SBR_APPLICATION_NAMESPACE }}"
    register: project_exists
    ignore_errors: true
    changed_when: false


  - name: "check if SBR OCP secret exists"
    command: "oc get secret --namespace {{ SBR_APPLICATION_NAMESPACE }} sbr-ocp-secret"
    register: secret_exists
    ignore_errors: true
    changed_when: false

  - name: create sbr-ocp-secret
    command: oc create secret --namespace "{{ SBR_APPLICATION_NAMESPACE }}" generic sbr-ocp-secret \ 
      --from-literal=OCP_URL="{{ OCP_URL}}" \
      --from-literal=OCP_TOKEN="{{ OCP_TOKEN }}" \
      --from-literal=OCP_NAMESPACE="{{ SBR_APPLICATION_NAMESPACE }}"
    when: secret_exists is failed

  - name: create sbr-openstack deployment, build and service
    command: oc new-app python~https://github.com/harshad16/sbr-openstack.git --name sbr-openstack
    ignore_errors: true
    changed_when: false

  - name: set the openshift environment variables
    command: oc set env --from=secret/sbr-ocp-secret dc/sbr-openstack 
    ignore_errors: true
    changed_when: false

  - name: set the environment variables
    command: oc set env dc/sbr-openstack APP_FILE=run.py
    ignore_errors: true
    changed_when: false

  - name: "check if service sbr-openstack exists"
    command: oc get service --namespace "{{ SBR_APPLICATION_NAMESPACE }}" sbr-openstack
    register: service_exists
    ignore_errors: true
    changed_when: false

  - name: Expose the route
    command: oc expose svc/sbr-openstack
    ignore_errors: true
    changed_when: false
